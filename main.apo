use static array
trait Person {
  name: string
  age: i4
}

fn print_person(person: 'Person) {
  printf("%s is %d years old", person.name, person.age)
  return
}

struct Student {
  #[Person]
  class: string
}

fn new_student(name: string, age: i4, class: string) -> Student {
  return new Student {
    name: name
    age: age
    class: class
  }
}

struct Developer {
  #[Person]
  main_language: string
}

fn new_developer(name: string, age: i4, main_language: string) -> Developer {
  return new Developer {
    name: name
    age: age
    main_language: main_language
  }
}

fn as_developer(element: Any) -> Developer {
  let developer : &Developer = element
  return *developer
}

let dev = new_developer("Lucas", 19, "Rust")
let student = new_student("Ronilson", 40, "3A")
let array = new_array_with_capacity(100)
array.push(&dev)
printf("%s\n", as_developer(array.elements[0]).name)
print_person(dev)
print_person(student)

return 0
