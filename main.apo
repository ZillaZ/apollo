fn str_conv(number: i4) -> string {
  let len = num_len(number, 1, 0)
  let buffer = array(char len)[]
  fill_buffer(buffer, len - 1, number)
  return buffer
}

fn fill_buffer(buffer: array(char), index: i4, number: i4) {
  if number > 0 {
    let digit = number % 10
    buffer[index] = digit + 48
    fill_buffer(buffer, index - 1, number / 10)
  }
  return
}
fn num_len(num: i4, mul: i4, count: i4) -> i4 {
  if mul <= num {
    return num_len(num, mul * 10, count + 1)
  }
  return count
}

let a = 10
&a *= 2
let b = 2.9
let c = {
  printf(str_conv(10))
  return 2.5
}
printf(str_conv(c))
return 0
