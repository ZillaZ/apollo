trait Iterable {}

struct Vec {
  length: i4
  elements: array(i4 100)
  index: i4
}

impl Iterable for Vec #{
  fn next(iterable: &Vec) -> i4 {
    let return_value = iterable.elements[iterable.index]
    iterable.index += 1
    return return_value
  }
  fn peek(iterable: &Vec) -> i4 {
    return iterable.elements[iterable.index]
  }
  fn ended(iterable: &Vec) -> bool {
    return (iterable.index == iterable.length)
  }
}

let test = new Vec {
  length: 100
  elements: array(i4 100)[153633284, 1403873428, -1486184700, 2061775832, 1432374346, -800231378, 2127955821, -575734615, -1338051926, 1517173287, 1616913989, -1239089104, 767895478, 2044476735, -1736805475, 772645032, 189662650, -1442195983, 47512422, -263173286, 372184733, 5948213, -1391667627, 1860635892, 1455524314, -1436348764, 1480531593, 777488780, -1095138032, 1536498440, 2027135035, 2053018351, 834560732, 1803677034, 1116981038, 1846100928, -1895205919, -1932534544, 1771892904, -1927723872, 83265176, 1835244560, -1547998279, -420641938, -1271049570, -279216436, -1546429099, 1421301692, 1179148145, -3443064, 587181011, -1571460970, -1765621681, 820309188, -145022591, -1521749399, 152151289, 235911218, -255490638, -1802098252, 1821442475, -1842181605, -23118506, 1197393575, -23317720, -45371614, -246691623, 798873727, 1576850638, -1513563780, 214287863, -1516235070, 314681736, -1178446043, 2078828445, 1442302351, 492427589, 1049493490, -1822544812, 558952721, -150767563, 1311940153, 1867713000, 52666609, -113799024, 713574294, -1213088840, -1574620791, -1863008018, -164052142, -616450211, 962911178, -73505269, 1156078763, -957761325, 621966336, 899678023, 88107948, -330714451, 876092464]
  index: 0
}

for i in test {
  printf("%d\n", i)
}
